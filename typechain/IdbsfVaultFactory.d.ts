/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IdbsfVaultFactoryInterface extends ethers.utils.Interface {
  functions: {
    "Liquidations(uint256)": FunctionFragment;
    "VaultHealthAddress()": FunctionFragment;
    "YTLiquidationRebates(address,address)": FunctionFragment;
    "YTLiquidations(uint256)": FunctionFragment;
    "YTLiquidationsLength()": FunctionFragment;
    "YTrevenue(address)": FunctionFragment;
    "YTvaults(address,uint256)": FunctionFragment;
    "YTvaultsLength(address)": FunctionFragment;
    "adjustVault(address,uint256,address,address,uint256,uint256,int128[3],bytes,address)": FunctionFragment;
    "adjustYTVault(address,uint256,address,address,uint256,int256,uint256,int128[3],bytes,address)": FunctionFragment;
    "allVaults(address)": FunctionFragment;
    "auctionLiquidation(address,uint256,address,address,uint256,uint256)": FunctionFragment;
    "auctionYTLiquidation(address,uint256,address,address,uint256,int256,uint256)": FunctionFragment;
    "bidOnLiquidation(uint256,uint256,uint256)": FunctionFragment;
    "bidOnYTLiquidation(uint256,uint256,uint256)": FunctionFragment;
    "claimLiquidation(uint256,address)": FunctionFragment;
    "claimRebate(address)": FunctionFragment;
    "claimRevenue(address)": FunctionFragment;
    "claimYTLiquidation(uint256,address)": FunctionFragment;
    "claimYTRebate(address)": FunctionFragment;
    "claimYTRevenue(address,int256)": FunctionFragment;
    "closeVault(uint256,address)": FunctionFragment;
    "closeYTVault(uint256,address)": FunctionFragment;
    "instantLiquidation(address,uint256,address,address,uint256,uint256,address)": FunctionFragment;
    "instantYTLiquidation(address,uint256,address,address,uint256,uint256,int256,address)": FunctionFragment;
    "liquidationRebates(address,address)": FunctionFragment;
    "liquidationsLength()": FunctionFragment;
    "openVault(address,address,uint256,uint256,uint256,int128,int128)": FunctionFragment;
    "openYTVault(address,address,uint256,int256,uint256,uint256,int128,int128)": FunctionFragment;
    "partialLiquidationSpecificIn(address,uint256,address,address,uint256,uint256,address)": FunctionFragment;
    "partialLiquidationSpecificOut(address,uint256,address,address,uint256,uint256,address)": FunctionFragment;
    "partialYTLiquidationSpecificIn(address,uint256,address,address,uint256,uint256,int256,address)": FunctionFragment;
    "partialYTLiquidationSpecificOut(address,uint256,address,address,uint256,int256,uint256,address)": FunctionFragment;
    "registerAsDistributionAccount(address)": FunctionFragment;
    "revenue(address)": FunctionFragment;
    "setLiquidationRebate(uint256)": FunctionFragment;
    "shortInterestAllDurations(address)": FunctionFragment;
    "transferVault(uint256,address,bool)": FunctionFragment;
    "vaults(address,uint256)": FunctionFragment;
    "vaultsLength(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "Liquidations",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "VaultHealthAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "YTLiquidationRebates",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "YTLiquidations",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "YTLiquidationsLength",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "YTrevenue", values: [string]): string;
  encodeFunctionData(
    functionFragment: "YTvaults",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "YTvaultsLength",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "adjustVault",
    values: [
      string,
      BigNumberish,
      string,
      string,
      BigNumberish,
      BigNumberish,
      [BigNumberish, BigNumberish, BigNumberish],
      BytesLike,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "adjustYTVault",
    values: [
      string,
      BigNumberish,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      [BigNumberish, BigNumberish, BigNumberish],
      BytesLike,
      string
    ]
  ): string;
  encodeFunctionData(functionFragment: "allVaults", values: [string]): string;
  encodeFunctionData(
    functionFragment: "auctionLiquidation",
    values: [string, BigNumberish, string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "auctionYTLiquidation",
    values: [
      string,
      BigNumberish,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "bidOnLiquidation",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "bidOnYTLiquidation",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "claimLiquidation",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(functionFragment: "claimRebate", values: [string]): string;
  encodeFunctionData(
    functionFragment: "claimRevenue",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "claimYTLiquidation",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "claimYTRebate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "claimYTRevenue",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "closeVault",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "closeYTVault",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "instantLiquidation",
    values: [
      string,
      BigNumberish,
      string,
      string,
      BigNumberish,
      BigNumberish,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "instantYTLiquidation",
    values: [
      string,
      BigNumberish,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "liquidationRebates",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "liquidationsLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "openVault",
    values: [
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "openYTVault",
    values: [
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "partialLiquidationSpecificIn",
    values: [
      string,
      BigNumberish,
      string,
      string,
      BigNumberish,
      BigNumberish,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "partialLiquidationSpecificOut",
    values: [
      string,
      BigNumberish,
      string,
      string,
      BigNumberish,
      BigNumberish,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "partialYTLiquidationSpecificIn",
    values: [
      string,
      BigNumberish,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "partialYTLiquidationSpecificOut",
    values: [
      string,
      BigNumberish,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "registerAsDistributionAccount",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "revenue", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setLiquidationRebate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "shortInterestAllDurations",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferVault",
    values: [BigNumberish, string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "vaults",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "vaultsLength",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "Liquidations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "VaultHealthAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "YTLiquidationRebates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "YTLiquidations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "YTLiquidationsLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "YTrevenue", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "YTvaults", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "YTvaultsLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adjustVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adjustYTVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "allVaults", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "auctionLiquidation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "auctionYTLiquidation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bidOnLiquidation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bidOnYTLiquidation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimLiquidation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimRebate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimRevenue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimYTLiquidation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimYTRebate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimYTRevenue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "closeVault", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "closeYTVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "instantLiquidation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "instantYTLiquidation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "liquidationRebates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "liquidationsLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "openVault", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "openYTVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "partialLiquidationSpecificIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "partialLiquidationSpecificOut",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "partialYTLiquidationSpecificIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "partialYTLiquidationSpecificOut",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerAsDistributionAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revenue", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setLiquidationRebate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "shortInterestAllDurations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "vaults", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "vaultsLength",
    data: BytesLike
  ): Result;

  events: {
    "AdjustVault(address,uint256)": EventFragment;
    "AdjustYTVault(address,uint256)": EventFragment;
    "AuctionLiquidation(address,uint256,uint256)": EventFragment;
    "AuctionYTLiquidation(address,uint256,uint256)": EventFragment;
    "BidOnLiquidation(uint256)": EventFragment;
    "BidOnYTLiquidation(uint256)": EventFragment;
    "ClaimLiquidation(uint256)": EventFragment;
    "ClaimRebate(address,address)": EventFragment;
    "ClaimYTLiquidation(uint256)": EventFragment;
    "ClaimYTRebate(address,address)": EventFragment;
    "CloseVault(address,uint256)": EventFragment;
    "CloseYTVault(address,uint256)": EventFragment;
    "InstantLiquidation(address,uint256)": EventFragment;
    "InstantYTLiquidation(address,uint256)": EventFragment;
    "OpenVault(address,uint256)": EventFragment;
    "OpenYTVault(address,uint256)": EventFragment;
    "TransferVault(address,uint256,address,bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AdjustVault"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AdjustYTVault"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AuctionLiquidation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AuctionYTLiquidation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BidOnLiquidation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BidOnYTLiquidation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ClaimLiquidation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ClaimRebate"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ClaimYTLiquidation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ClaimYTRebate"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CloseVault"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CloseYTVault"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "InstantLiquidation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "InstantYTLiquidation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OpenVault"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OpenYTVault"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransferVault"): EventFragment;
}

export class IdbsfVaultFactory extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IdbsfVaultFactoryInterface;

  functions: {
    Liquidations(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vaultOwner: string;
      assetSupplied: string;
      assetBorrowed: string;
      amountBorrowed: BigNumber;
      bidder: string;
      bidAmount: BigNumber;
      bidTimestamp: BigNumber;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: BigNumber;
      6: BigNumber;
    }>;

    "Liquidations(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vaultOwner: string;
      assetSupplied: string;
      assetBorrowed: string;
      amountBorrowed: BigNumber;
      bidder: string;
      bidAmount: BigNumber;
      bidTimestamp: BigNumber;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: BigNumber;
      6: BigNumber;
    }>;

    VaultHealthAddress(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "VaultHealthAddress()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    YTLiquidationRebates(
      _owner: string,
      _FCP: string,
      overrides?: CallOverrides
    ): Promise<{
      yield: BigNumber;
      bond: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "YTLiquidationRebates(address,address)"(
      _owner: string,
      _FCP: string,
      overrides?: CallOverrides
    ): Promise<{
      yield: BigNumber;
      bond: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    YTLiquidations(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vaultOwner: string;
      FCPsupplied: string;
      FCPborrowed: string;
      bondRatio: BigNumber;
      amountBorrowed: BigNumber;
      bidder: string;
      bidAmount: BigNumber;
      bidTimestamp: BigNumber;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: BigNumber;
      5: string;
      6: BigNumber;
      7: BigNumber;
    }>;

    "YTLiquidations(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vaultOwner: string;
      FCPsupplied: string;
      FCPborrowed: string;
      bondRatio: BigNumber;
      amountBorrowed: BigNumber;
      bidder: string;
      bidAmount: BigNumber;
      bidTimestamp: BigNumber;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: BigNumber;
      5: string;
      6: BigNumber;
      7: BigNumber;
    }>;

    YTLiquidationsLength(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "YTLiquidationsLength()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    YTrevenue(
      _FCPaddress: string,
      overrides?: CallOverrides
    ): Promise<{
      yield: BigNumber;
      bond: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "YTrevenue(address)"(
      _FCPaddress: string,
      overrides?: CallOverrides
    ): Promise<{
      yield: BigNumber;
      bond: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    YTvaults(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      FCPsupplied: string;
      FCPborrowed: string;
      yieldSupplied: BigNumber;
      bondSupplied: BigNumber;
      amountBorrowed: BigNumber;
      amountSFee: BigNumber;
      timestampOpened: BigNumber;
      stabilityFeeAPR: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    "YTvaults(address,uint256)"(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      FCPsupplied: string;
      FCPborrowed: string;
      yieldSupplied: BigNumber;
      bondSupplied: BigNumber;
      amountBorrowed: BigNumber;
      amountSFee: BigNumber;
      timestampOpened: BigNumber;
      stabilityFeeAPR: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    YTvaultsLength(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "YTvaultsLength(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    adjustVault(
      _owner: string,
      _index: BigNumberish,
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "adjustVault(address,uint256,address,address,uint256,uint256,int128[3],bytes,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    adjustYTVault(
      _owner: string,
      _index: BigNumberish,
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "adjustYTVault(address,uint256,address,address,uint256,int256,uint256,int128[3],bytes,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    allVaults(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      _vaults: {
        assetSupplied: string;
        assetBorrowed: string;
        amountSupplied: BigNumber;
        amountBorrowed: BigNumber;
        amountSFee: BigNumber;
        timestampOpened: BigNumber;
        stabilityFeeAPR: BigNumber;
        0: string;
        1: string;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
      }[];
      0: {
        assetSupplied: string;
        assetBorrowed: string;
        amountSupplied: BigNumber;
        amountBorrowed: BigNumber;
        amountSFee: BigNumber;
        timestampOpened: BigNumber;
        stabilityFeeAPR: BigNumber;
        0: string;
        1: string;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
      }[];
    }>;

    "allVaults(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      _vaults: {
        assetSupplied: string;
        assetBorrowed: string;
        amountSupplied: BigNumber;
        amountBorrowed: BigNumber;
        amountSFee: BigNumber;
        timestampOpened: BigNumber;
        stabilityFeeAPR: BigNumber;
        0: string;
        1: string;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
      }[];
      0: {
        assetSupplied: string;
        assetBorrowed: string;
        amountSupplied: BigNumber;
        amountBorrowed: BigNumber;
        amountSFee: BigNumber;
        timestampOpened: BigNumber;
        stabilityFeeAPR: BigNumber;
        0: string;
        1: string;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
      }[];
    }>;

    auctionLiquidation(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "auctionLiquidation(address,uint256,address,address,uint256,uint256)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    auctionYTLiquidation(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _bidYield: BigNumberish,
      _minBondRatio: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "auctionYTLiquidation(address,uint256,address,address,uint256,int256,uint256)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _bidYield: BigNumberish,
      _minBondRatio: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    bidOnLiquidation(
      _index: BigNumberish,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "bidOnLiquidation(uint256,uint256,uint256)"(
      _index: BigNumberish,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    bidOnYTLiquidation(
      _index: BigNumberish,
      _bidYield: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "bidOnYTLiquidation(uint256,uint256,uint256)"(
      _index: BigNumberish,
      _bidYield: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    claimLiquidation(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "claimLiquidation(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    claimRebate(
      _asset: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "claimRebate(address)"(
      _asset: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    claimRevenue(
      _asset: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "claimRevenue(address)"(
      _asset: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    claimYTLiquidation(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "claimYTLiquidation(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    claimYTRebate(
      _FCPaddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "claimYTRebate(address)"(
      _FCPaddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    claimYTRevenue(
      _FCP: string,
      _bondIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "claimYTRevenue(address,int256)"(
      _FCP: string,
      _bondIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    closeVault(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "closeVault(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    closeYTVault(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "closeYTVault(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    instantLiquidation(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "instantLiquidation(address,uint256,address,address,uint256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    instantYTLiquidation(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "instantYTLiquidation(address,uint256,address,address,uint256,uint256,int256,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    liquidationRebates(
      _owner: string,
      _asset: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "liquidationRebates(address,address)"(
      _owner: string,
      _asset: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    liquidationsLength(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "liquidationsLength()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    openVault(
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "openVault(address,address,uint256,uint256,uint256,int128,int128)"(
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    openYTVault(
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "openYTVault(address,address,uint256,int256,uint256,uint256,int128,int128)"(
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    partialLiquidationSpecificIn(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "partialLiquidationSpecificIn(address,uint256,address,address,uint256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    partialLiquidationSpecificOut(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _out: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "partialLiquidationSpecificOut(address,uint256,address,address,uint256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _out: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    partialYTLiquidationSpecificIn(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "partialYTLiquidationSpecificIn(address,uint256,address,address,uint256,uint256,int256,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    partialYTLiquidationSpecificOut(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _out: BigNumberish,
      _minBondRatio: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "partialYTLiquidationSpecificOut(address,uint256,address,address,uint256,int256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _out: BigNumberish,
      _minBondRatio: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    registerAsDistributionAccount(
      _wrapperAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "registerAsDistributionAccount(address)"(
      _wrapperAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    revenue(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "revenue(address)"(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    setLiquidationRebate(
      _rebateBips: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setLiquidationRebate(uint256)"(
      _rebateBips: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    shortInterestAllDurations(
      _wrapper: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "shortInterestAllDurations(address)"(
      _wrapper: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    transferVault(
      _index: BigNumberish,
      _to: string,
      _isYTVault: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferVault(uint256,address,bool)"(
      _index: BigNumberish,
      _to: string,
      _isYTVault: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    vaults(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      assetSupplied: string;
      assetBorrowed: string;
      amountSupplied: BigNumber;
      amountBorrowed: BigNumber;
      amountSFee: BigNumber;
      timestampOpened: BigNumber;
      stabilityFeeAPR: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
    }>;

    "vaults(address,uint256)"(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      assetSupplied: string;
      assetBorrowed: string;
      amountSupplied: BigNumber;
      amountBorrowed: BigNumber;
      amountSFee: BigNumber;
      timestampOpened: BigNumber;
      stabilityFeeAPR: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
    }>;

    vaultsLength(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "vaultsLength(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;
  };

  Liquidations(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    vaultOwner: string;
    assetSupplied: string;
    assetBorrowed: string;
    amountBorrowed: BigNumber;
    bidder: string;
    bidAmount: BigNumber;
    bidTimestamp: BigNumber;
    0: string;
    1: string;
    2: string;
    3: BigNumber;
    4: string;
    5: BigNumber;
    6: BigNumber;
  }>;

  "Liquidations(uint256)"(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    vaultOwner: string;
    assetSupplied: string;
    assetBorrowed: string;
    amountBorrowed: BigNumber;
    bidder: string;
    bidAmount: BigNumber;
    bidTimestamp: BigNumber;
    0: string;
    1: string;
    2: string;
    3: BigNumber;
    4: string;
    5: BigNumber;
    6: BigNumber;
  }>;

  VaultHealthAddress(overrides?: CallOverrides): Promise<string>;

  "VaultHealthAddress()"(overrides?: CallOverrides): Promise<string>;

  YTLiquidationRebates(
    _owner: string,
    _FCP: string,
    overrides?: CallOverrides
  ): Promise<{
    yield: BigNumber;
    bond: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  "YTLiquidationRebates(address,address)"(
    _owner: string,
    _FCP: string,
    overrides?: CallOverrides
  ): Promise<{
    yield: BigNumber;
    bond: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  YTLiquidations(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    vaultOwner: string;
    FCPsupplied: string;
    FCPborrowed: string;
    bondRatio: BigNumber;
    amountBorrowed: BigNumber;
    bidder: string;
    bidAmount: BigNumber;
    bidTimestamp: BigNumber;
    0: string;
    1: string;
    2: string;
    3: BigNumber;
    4: BigNumber;
    5: string;
    6: BigNumber;
    7: BigNumber;
  }>;

  "YTLiquidations(uint256)"(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    vaultOwner: string;
    FCPsupplied: string;
    FCPborrowed: string;
    bondRatio: BigNumber;
    amountBorrowed: BigNumber;
    bidder: string;
    bidAmount: BigNumber;
    bidTimestamp: BigNumber;
    0: string;
    1: string;
    2: string;
    3: BigNumber;
    4: BigNumber;
    5: string;
    6: BigNumber;
    7: BigNumber;
  }>;

  YTLiquidationsLength(overrides?: CallOverrides): Promise<BigNumber>;

  "YTLiquidationsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

  YTrevenue(
    _FCPaddress: string,
    overrides?: CallOverrides
  ): Promise<{
    yield: BigNumber;
    bond: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  "YTrevenue(address)"(
    _FCPaddress: string,
    overrides?: CallOverrides
  ): Promise<{
    yield: BigNumber;
    bond: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  YTvaults(
    _owner: string,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    FCPsupplied: string;
    FCPborrowed: string;
    yieldSupplied: BigNumber;
    bondSupplied: BigNumber;
    amountBorrowed: BigNumber;
    amountSFee: BigNumber;
    timestampOpened: BigNumber;
    stabilityFeeAPR: BigNumber;
    0: string;
    1: string;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
  }>;

  "YTvaults(address,uint256)"(
    _owner: string,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    FCPsupplied: string;
    FCPborrowed: string;
    yieldSupplied: BigNumber;
    bondSupplied: BigNumber;
    amountBorrowed: BigNumber;
    amountSFee: BigNumber;
    timestampOpened: BigNumber;
    stabilityFeeAPR: BigNumber;
    0: string;
    1: string;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
  }>;

  YTvaultsLength(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  "YTvaultsLength(address)"(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  adjustVault(
    _owner: string,
    _index: BigNumberish,
    _assetSupplied: string,
    _assetBorrowed: string,
    _amountSupplied: BigNumberish,
    _amountBorrowed: BigNumberish,
    _multipliers: [BigNumberish, BigNumberish, BigNumberish],
    _data: BytesLike,
    _receiverAddr: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "adjustVault(address,uint256,address,address,uint256,uint256,int128[3],bytes,address)"(
    _owner: string,
    _index: BigNumberish,
    _assetSupplied: string,
    _assetBorrowed: string,
    _amountSupplied: BigNumberish,
    _amountBorrowed: BigNumberish,
    _multipliers: [BigNumberish, BigNumberish, BigNumberish],
    _data: BytesLike,
    _receiverAddr: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  adjustYTVault(
    _owner: string,
    _index: BigNumberish,
    _FCPsupplied: string,
    _FCPborrowed: string,
    _yieldSupplied: BigNumberish,
    _bondSupplied: BigNumberish,
    _amountBorrowed: BigNumberish,
    _multipliers: [BigNumberish, BigNumberish, BigNumberish],
    _data: BytesLike,
    _receiverAddr: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "adjustYTVault(address,uint256,address,address,uint256,int256,uint256,int128[3],bytes,address)"(
    _owner: string,
    _index: BigNumberish,
    _FCPsupplied: string,
    _FCPborrowed: string,
    _yieldSupplied: BigNumberish,
    _bondSupplied: BigNumberish,
    _amountBorrowed: BigNumberish,
    _multipliers: [BigNumberish, BigNumberish, BigNumberish],
    _data: BytesLike,
    _receiverAddr: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  allVaults(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<
    {
      assetSupplied: string;
      assetBorrowed: string;
      amountSupplied: BigNumber;
      amountBorrowed: BigNumber;
      amountSFee: BigNumber;
      timestampOpened: BigNumber;
      stabilityFeeAPR: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
    }[]
  >;

  "allVaults(address)"(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<
    {
      assetSupplied: string;
      assetBorrowed: string;
      amountSupplied: BigNumber;
      amountBorrowed: BigNumber;
      amountSFee: BigNumber;
      timestampOpened: BigNumber;
      stabilityFeeAPR: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
    }[]
  >;

  auctionLiquidation(
    _owner: string,
    _index: BigNumberish,
    _assetBorrowed: string,
    _assetSupplied: string,
    _bid: BigNumberish,
    _amtIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "auctionLiquidation(address,uint256,address,address,uint256,uint256)"(
    _owner: string,
    _index: BigNumberish,
    _assetBorrowed: string,
    _assetSupplied: string,
    _bid: BigNumberish,
    _amtIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  auctionYTLiquidation(
    _owner: string,
    _index: BigNumberish,
    _FCPborrowed: string,
    _FCPsupplied: string,
    _bidYield: BigNumberish,
    _minBondRatio: BigNumberish,
    _amtIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "auctionYTLiquidation(address,uint256,address,address,uint256,int256,uint256)"(
    _owner: string,
    _index: BigNumberish,
    _FCPborrowed: string,
    _FCPsupplied: string,
    _bidYield: BigNumberish,
    _minBondRatio: BigNumberish,
    _amtIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  bidOnLiquidation(
    _index: BigNumberish,
    _bid: BigNumberish,
    _amtIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "bidOnLiquidation(uint256,uint256,uint256)"(
    _index: BigNumberish,
    _bid: BigNumberish,
    _amtIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  bidOnYTLiquidation(
    _index: BigNumberish,
    _bidYield: BigNumberish,
    _amtIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "bidOnYTLiquidation(uint256,uint256,uint256)"(
    _index: BigNumberish,
    _bidYield: BigNumberish,
    _amtIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  claimLiquidation(
    _index: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "claimLiquidation(uint256,address)"(
    _index: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  claimRebate(
    _asset: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "claimRebate(address)"(
    _asset: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  claimRevenue(
    _asset: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "claimRevenue(address)"(
    _asset: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  claimYTLiquidation(
    _index: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "claimYTLiquidation(uint256,address)"(
    _index: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  claimYTRebate(
    _FCPaddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "claimYTRebate(address)"(
    _FCPaddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  claimYTRevenue(
    _FCP: string,
    _bondIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "claimYTRevenue(address,int256)"(
    _FCP: string,
    _bondIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  closeVault(
    _index: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "closeVault(uint256,address)"(
    _index: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  closeYTVault(
    _index: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "closeYTVault(uint256,address)"(
    _index: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  instantLiquidation(
    _owner: string,
    _index: BigNumberish,
    _assetBorrowed: string,
    _assetSupplied: string,
    _maxIn: BigNumberish,
    _minOut: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "instantLiquidation(address,uint256,address,address,uint256,uint256,address)"(
    _owner: string,
    _index: BigNumberish,
    _assetBorrowed: string,
    _assetSupplied: string,
    _maxIn: BigNumberish,
    _minOut: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  instantYTLiquidation(
    _owner: string,
    _index: BigNumberish,
    _FCPborrowed: string,
    _FCPsupplied: string,
    _maxIn: BigNumberish,
    _minOut: BigNumberish,
    _minBondRatio: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "instantYTLiquidation(address,uint256,address,address,uint256,uint256,int256,address)"(
    _owner: string,
    _index: BigNumberish,
    _FCPborrowed: string,
    _FCPsupplied: string,
    _maxIn: BigNumberish,
    _minOut: BigNumberish,
    _minBondRatio: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  liquidationRebates(
    _owner: string,
    _asset: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "liquidationRebates(address,address)"(
    _owner: string,
    _asset: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  liquidationsLength(overrides?: CallOverrides): Promise<BigNumber>;

  "liquidationsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

  openVault(
    _assetSupplied: string,
    _assetBorrowed: string,
    _amountSupplied: BigNumberish,
    _amountBorrowed: BigNumberish,
    _priceMultiplier: BigNumberish,
    _suppliedRateChange: BigNumberish,
    _borrowRateChange: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "openVault(address,address,uint256,uint256,uint256,int128,int128)"(
    _assetSupplied: string,
    _assetBorrowed: string,
    _amountSupplied: BigNumberish,
    _amountBorrowed: BigNumberish,
    _priceMultiplier: BigNumberish,
    _suppliedRateChange: BigNumberish,
    _borrowRateChange: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  openYTVault(
    _FCPsupplied: string,
    _FCPborrowed: string,
    _yieldSupplied: BigNumberish,
    _bondSupplied: BigNumberish,
    _amountBorrowed: BigNumberish,
    _priceMultiplier: BigNumberish,
    _suppliedRateChange: BigNumberish,
    _borrowRateChange: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "openYTVault(address,address,uint256,int256,uint256,uint256,int128,int128)"(
    _FCPsupplied: string,
    _FCPborrowed: string,
    _yieldSupplied: BigNumberish,
    _bondSupplied: BigNumberish,
    _amountBorrowed: BigNumberish,
    _priceMultiplier: BigNumberish,
    _suppliedRateChange: BigNumberish,
    _borrowRateChange: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  partialLiquidationSpecificIn(
    _owner: string,
    _index: BigNumberish,
    _assetBorrowed: string,
    _assetSupplied: string,
    _in: BigNumberish,
    _minOut: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "partialLiquidationSpecificIn(address,uint256,address,address,uint256,uint256,address)"(
    _owner: string,
    _index: BigNumberish,
    _assetBorrowed: string,
    _assetSupplied: string,
    _in: BigNumberish,
    _minOut: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  partialLiquidationSpecificOut(
    _owner: string,
    _index: BigNumberish,
    _assetBorrowed: string,
    _assetSupplied: string,
    _out: BigNumberish,
    _maxIn: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "partialLiquidationSpecificOut(address,uint256,address,address,uint256,uint256,address)"(
    _owner: string,
    _index: BigNumberish,
    _assetBorrowed: string,
    _assetSupplied: string,
    _out: BigNumberish,
    _maxIn: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  partialYTLiquidationSpecificIn(
    _owner: string,
    _index: BigNumberish,
    _FCPborrowed: string,
    _FCPsupplied: string,
    _in: BigNumberish,
    _minOut: BigNumberish,
    _minBondRatio: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "partialYTLiquidationSpecificIn(address,uint256,address,address,uint256,uint256,int256,address)"(
    _owner: string,
    _index: BigNumberish,
    _FCPborrowed: string,
    _FCPsupplied: string,
    _in: BigNumberish,
    _minOut: BigNumberish,
    _minBondRatio: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  partialYTLiquidationSpecificOut(
    _owner: string,
    _index: BigNumberish,
    _FCPborrowed: string,
    _FCPsupplied: string,
    _out: BigNumberish,
    _minBondRatio: BigNumberish,
    _maxIn: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "partialYTLiquidationSpecificOut(address,uint256,address,address,uint256,int256,uint256,address)"(
    _owner: string,
    _index: BigNumberish,
    _FCPborrowed: string,
    _FCPsupplied: string,
    _out: BigNumberish,
    _minBondRatio: BigNumberish,
    _maxIn: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  registerAsDistributionAccount(
    _wrapperAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "registerAsDistributionAccount(address)"(
    _wrapperAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  revenue(_asset: string, overrides?: CallOverrides): Promise<BigNumber>;

  "revenue(address)"(
    _asset: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setLiquidationRebate(
    _rebateBips: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setLiquidationRebate(uint256)"(
    _rebateBips: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  shortInterestAllDurations(
    _wrapper: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "shortInterestAllDurations(address)"(
    _wrapper: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  transferVault(
    _index: BigNumberish,
    _to: string,
    _isYTVault: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferVault(uint256,address,bool)"(
    _index: BigNumberish,
    _to: string,
    _isYTVault: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  vaults(
    _owner: string,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    assetSupplied: string;
    assetBorrowed: string;
    amountSupplied: BigNumber;
    amountBorrowed: BigNumber;
    amountSFee: BigNumber;
    timestampOpened: BigNumber;
    stabilityFeeAPR: BigNumber;
    0: string;
    1: string;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
  }>;

  "vaults(address,uint256)"(
    _owner: string,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    assetSupplied: string;
    assetBorrowed: string;
    amountSupplied: BigNumber;
    amountBorrowed: BigNumber;
    amountSFee: BigNumber;
    timestampOpened: BigNumber;
    stabilityFeeAPR: BigNumber;
    0: string;
    1: string;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
  }>;

  vaultsLength(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  "vaultsLength(address)"(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    Liquidations(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vaultOwner: string;
      assetSupplied: string;
      assetBorrowed: string;
      amountBorrowed: BigNumber;
      bidder: string;
      bidAmount: BigNumber;
      bidTimestamp: BigNumber;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: BigNumber;
      6: BigNumber;
    }>;

    "Liquidations(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vaultOwner: string;
      assetSupplied: string;
      assetBorrowed: string;
      amountBorrowed: BigNumber;
      bidder: string;
      bidAmount: BigNumber;
      bidTimestamp: BigNumber;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: BigNumber;
      6: BigNumber;
    }>;

    VaultHealthAddress(overrides?: CallOverrides): Promise<string>;

    "VaultHealthAddress()"(overrides?: CallOverrides): Promise<string>;

    YTLiquidationRebates(
      _owner: string,
      _FCP: string,
      overrides?: CallOverrides
    ): Promise<{
      yield: BigNumber;
      bond: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "YTLiquidationRebates(address,address)"(
      _owner: string,
      _FCP: string,
      overrides?: CallOverrides
    ): Promise<{
      yield: BigNumber;
      bond: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    YTLiquidations(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vaultOwner: string;
      FCPsupplied: string;
      FCPborrowed: string;
      bondRatio: BigNumber;
      amountBorrowed: BigNumber;
      bidder: string;
      bidAmount: BigNumber;
      bidTimestamp: BigNumber;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: BigNumber;
      5: string;
      6: BigNumber;
      7: BigNumber;
    }>;

    "YTLiquidations(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vaultOwner: string;
      FCPsupplied: string;
      FCPborrowed: string;
      bondRatio: BigNumber;
      amountBorrowed: BigNumber;
      bidder: string;
      bidAmount: BigNumber;
      bidTimestamp: BigNumber;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: BigNumber;
      5: string;
      6: BigNumber;
      7: BigNumber;
    }>;

    YTLiquidationsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "YTLiquidationsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    YTrevenue(
      _FCPaddress: string,
      overrides?: CallOverrides
    ): Promise<{
      yield: BigNumber;
      bond: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "YTrevenue(address)"(
      _FCPaddress: string,
      overrides?: CallOverrides
    ): Promise<{
      yield: BigNumber;
      bond: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    YTvaults(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      FCPsupplied: string;
      FCPborrowed: string;
      yieldSupplied: BigNumber;
      bondSupplied: BigNumber;
      amountBorrowed: BigNumber;
      amountSFee: BigNumber;
      timestampOpened: BigNumber;
      stabilityFeeAPR: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    "YTvaults(address,uint256)"(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      FCPsupplied: string;
      FCPborrowed: string;
      yieldSupplied: BigNumber;
      bondSupplied: BigNumber;
      amountBorrowed: BigNumber;
      amountSFee: BigNumber;
      timestampOpened: BigNumber;
      stabilityFeeAPR: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    YTvaultsLength(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "YTvaultsLength(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    adjustVault(
      _owner: string,
      _index: BigNumberish,
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "adjustVault(address,uint256,address,address,uint256,uint256,int128[3],bytes,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    adjustYTVault(
      _owner: string,
      _index: BigNumberish,
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "adjustYTVault(address,uint256,address,address,uint256,int256,uint256,int128[3],bytes,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    allVaults(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<
      {
        assetSupplied: string;
        assetBorrowed: string;
        amountSupplied: BigNumber;
        amountBorrowed: BigNumber;
        amountSFee: BigNumber;
        timestampOpened: BigNumber;
        stabilityFeeAPR: BigNumber;
        0: string;
        1: string;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
      }[]
    >;

    "allVaults(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<
      {
        assetSupplied: string;
        assetBorrowed: string;
        amountSupplied: BigNumber;
        amountBorrowed: BigNumber;
        amountSFee: BigNumber;
        timestampOpened: BigNumber;
        stabilityFeeAPR: BigNumber;
        0: string;
        1: string;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
      }[]
    >;

    auctionLiquidation(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "auctionLiquidation(address,uint256,address,address,uint256,uint256)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    auctionYTLiquidation(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _bidYield: BigNumberish,
      _minBondRatio: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "auctionYTLiquidation(address,uint256,address,address,uint256,int256,uint256)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _bidYield: BigNumberish,
      _minBondRatio: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    bidOnLiquidation(
      _index: BigNumberish,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "bidOnLiquidation(uint256,uint256,uint256)"(
      _index: BigNumberish,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    bidOnYTLiquidation(
      _index: BigNumberish,
      _bidYield: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "bidOnYTLiquidation(uint256,uint256,uint256)"(
      _index: BigNumberish,
      _bidYield: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    claimLiquidation(
      _index: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "claimLiquidation(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    claimRebate(_asset: string, overrides?: CallOverrides): Promise<void>;

    "claimRebate(address)"(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<void>;

    claimRevenue(_asset: string, overrides?: CallOverrides): Promise<void>;

    "claimRevenue(address)"(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<void>;

    claimYTLiquidation(
      _index: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "claimYTLiquidation(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    claimYTRebate(
      _FCPaddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "claimYTRebate(address)"(
      _FCPaddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    claimYTRevenue(
      _FCP: string,
      _bondIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "claimYTRevenue(address,int256)"(
      _FCP: string,
      _bondIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    closeVault(
      _index: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "closeVault(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    closeYTVault(
      _index: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "closeYTVault(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    instantLiquidation(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "instantLiquidation(address,uint256,address,address,uint256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    instantYTLiquidation(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "instantYTLiquidation(address,uint256,address,address,uint256,uint256,int256,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    liquidationRebates(
      _owner: string,
      _asset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "liquidationRebates(address,address)"(
      _owner: string,
      _asset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    liquidationsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "liquidationsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    openVault(
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "openVault(address,address,uint256,uint256,uint256,int128,int128)"(
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    openYTVault(
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "openYTVault(address,address,uint256,int256,uint256,uint256,int128,int128)"(
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    partialLiquidationSpecificIn(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "partialLiquidationSpecificIn(address,uint256,address,address,uint256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    partialLiquidationSpecificOut(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _out: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "partialLiquidationSpecificOut(address,uint256,address,address,uint256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _out: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    partialYTLiquidationSpecificIn(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "partialYTLiquidationSpecificIn(address,uint256,address,address,uint256,uint256,int256,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    partialYTLiquidationSpecificOut(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _out: BigNumberish,
      _minBondRatio: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "partialYTLiquidationSpecificOut(address,uint256,address,address,uint256,int256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _out: BigNumberish,
      _minBondRatio: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    registerAsDistributionAccount(
      _wrapperAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "registerAsDistributionAccount(address)"(
      _wrapperAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    revenue(_asset: string, overrides?: CallOverrides): Promise<BigNumber>;

    "revenue(address)"(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setLiquidationRebate(
      _rebateBips: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setLiquidationRebate(uint256)"(
      _rebateBips: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    shortInterestAllDurations(
      _wrapper: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "shortInterestAllDurations(address)"(
      _wrapper: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferVault(
      _index: BigNumberish,
      _to: string,
      _isYTVault: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferVault(uint256,address,bool)"(
      _index: BigNumberish,
      _to: string,
      _isYTVault: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    vaults(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      assetSupplied: string;
      assetBorrowed: string;
      amountSupplied: BigNumber;
      amountBorrowed: BigNumber;
      amountSFee: BigNumber;
      timestampOpened: BigNumber;
      stabilityFeeAPR: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
    }>;

    "vaults(address,uint256)"(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      assetSupplied: string;
      assetBorrowed: string;
      amountSupplied: BigNumber;
      amountBorrowed: BigNumber;
      amountSFee: BigNumber;
      timestampOpened: BigNumber;
      stabilityFeeAPR: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
    }>;

    vaultsLength(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "vaultsLength(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    AdjustVault(owner: string | null, index: null): EventFilter;

    AdjustYTVault(owner: string | null, index: null): EventFilter;

    AuctionLiquidation(
      vaultOwner: string | null,
      vaultIndex: null,
      liquidationIndex: null
    ): EventFilter;

    AuctionYTLiquidation(
      YTvaultOwner: string | null,
      YTvaultIndex: null,
      YTliquidationIndex: null
    ): EventFilter;

    BidOnLiquidation(liquidationIndex: null): EventFilter;

    BidOnYTLiquidation(YTliquidationIndex: null): EventFilter;

    ClaimLiquidation(liquidationIndex: null): EventFilter;

    ClaimRebate(owner: string | null, asset: null): EventFilter;

    ClaimYTLiquidation(YTliquidationIndex: null): EventFilter;

    ClaimYTRebate(owner: string | null, FCPaddress: null): EventFilter;

    CloseVault(owner: string | null, index: null): EventFilter;

    CloseYTVault(owner: string | null, index: null): EventFilter;

    InstantLiquidation(owner: string | null, index: null): EventFilter;

    InstantYTLiquidation(owner: string | null, index: null): EventFilter;

    OpenVault(owner: string | null, index: null): EventFilter;

    OpenYTVault(owner: string | null, index: null): EventFilter;

    TransferVault(
      prevOwner: string | null,
      prevIndex: null,
      newOwner: string | null,
      isYTVault: null
    ): EventFilter;
  };

  estimateGas: {
    Liquidations(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "Liquidations(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    VaultHealthAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "VaultHealthAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    YTLiquidationRebates(
      _owner: string,
      _FCP: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "YTLiquidationRebates(address,address)"(
      _owner: string,
      _FCP: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    YTLiquidations(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "YTLiquidations(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    YTLiquidationsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "YTLiquidationsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    YTrevenue(
      _FCPaddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "YTrevenue(address)"(
      _FCPaddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    YTvaults(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "YTvaults(address,uint256)"(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    YTvaultsLength(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "YTvaultsLength(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    adjustVault(
      _owner: string,
      _index: BigNumberish,
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "adjustVault(address,uint256,address,address,uint256,uint256,int128[3],bytes,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    adjustYTVault(
      _owner: string,
      _index: BigNumberish,
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "adjustYTVault(address,uint256,address,address,uint256,int256,uint256,int128[3],bytes,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    allVaults(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "allVaults(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    auctionLiquidation(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "auctionLiquidation(address,uint256,address,address,uint256,uint256)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    auctionYTLiquidation(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _bidYield: BigNumberish,
      _minBondRatio: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "auctionYTLiquidation(address,uint256,address,address,uint256,int256,uint256)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _bidYield: BigNumberish,
      _minBondRatio: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    bidOnLiquidation(
      _index: BigNumberish,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "bidOnLiquidation(uint256,uint256,uint256)"(
      _index: BigNumberish,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    bidOnYTLiquidation(
      _index: BigNumberish,
      _bidYield: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "bidOnYTLiquidation(uint256,uint256,uint256)"(
      _index: BigNumberish,
      _bidYield: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    claimLiquidation(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "claimLiquidation(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    claimRebate(_asset: string, overrides?: Overrides): Promise<BigNumber>;

    "claimRebate(address)"(
      _asset: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    claimRevenue(_asset: string, overrides?: Overrides): Promise<BigNumber>;

    "claimRevenue(address)"(
      _asset: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    claimYTLiquidation(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "claimYTLiquidation(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    claimYTRebate(
      _FCPaddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "claimYTRebate(address)"(
      _FCPaddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    claimYTRevenue(
      _FCP: string,
      _bondIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "claimYTRevenue(address,int256)"(
      _FCP: string,
      _bondIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    closeVault(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "closeVault(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    closeYTVault(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "closeYTVault(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    instantLiquidation(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "instantLiquidation(address,uint256,address,address,uint256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    instantYTLiquidation(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "instantYTLiquidation(address,uint256,address,address,uint256,uint256,int256,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    liquidationRebates(
      _owner: string,
      _asset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "liquidationRebates(address,address)"(
      _owner: string,
      _asset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    liquidationsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "liquidationsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    openVault(
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "openVault(address,address,uint256,uint256,uint256,int128,int128)"(
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    openYTVault(
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "openYTVault(address,address,uint256,int256,uint256,uint256,int128,int128)"(
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    partialLiquidationSpecificIn(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "partialLiquidationSpecificIn(address,uint256,address,address,uint256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    partialLiquidationSpecificOut(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _out: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "partialLiquidationSpecificOut(address,uint256,address,address,uint256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _out: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    partialYTLiquidationSpecificIn(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "partialYTLiquidationSpecificIn(address,uint256,address,address,uint256,uint256,int256,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    partialYTLiquidationSpecificOut(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _out: BigNumberish,
      _minBondRatio: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "partialYTLiquidationSpecificOut(address,uint256,address,address,uint256,int256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _out: BigNumberish,
      _minBondRatio: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    registerAsDistributionAccount(
      _wrapperAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "registerAsDistributionAccount(address)"(
      _wrapperAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    revenue(_asset: string, overrides?: CallOverrides): Promise<BigNumber>;

    "revenue(address)"(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setLiquidationRebate(
      _rebateBips: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setLiquidationRebate(uint256)"(
      _rebateBips: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    shortInterestAllDurations(
      _wrapper: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "shortInterestAllDurations(address)"(
      _wrapper: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferVault(
      _index: BigNumberish,
      _to: string,
      _isYTVault: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferVault(uint256,address,bool)"(
      _index: BigNumberish,
      _to: string,
      _isYTVault: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    vaults(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "vaults(address,uint256)"(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    vaultsLength(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "vaultsLength(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    Liquidations(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "Liquidations(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    VaultHealthAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "VaultHealthAddress()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    YTLiquidationRebates(
      _owner: string,
      _FCP: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "YTLiquidationRebates(address,address)"(
      _owner: string,
      _FCP: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    YTLiquidations(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "YTLiquidations(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    YTLiquidationsLength(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "YTLiquidationsLength()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    YTrevenue(
      _FCPaddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "YTrevenue(address)"(
      _FCPaddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    YTvaults(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "YTvaults(address,uint256)"(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    YTvaultsLength(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "YTvaultsLength(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    adjustVault(
      _owner: string,
      _index: BigNumberish,
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "adjustVault(address,uint256,address,address,uint256,uint256,int128[3],bytes,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    adjustYTVault(
      _owner: string,
      _index: BigNumberish,
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "adjustYTVault(address,uint256,address,address,uint256,int256,uint256,int128[3],bytes,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _multipliers: [BigNumberish, BigNumberish, BigNumberish],
      _data: BytesLike,
      _receiverAddr: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    allVaults(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "allVaults(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    auctionLiquidation(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "auctionLiquidation(address,uint256,address,address,uint256,uint256)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    auctionYTLiquidation(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _bidYield: BigNumberish,
      _minBondRatio: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "auctionYTLiquidation(address,uint256,address,address,uint256,int256,uint256)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _bidYield: BigNumberish,
      _minBondRatio: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    bidOnLiquidation(
      _index: BigNumberish,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "bidOnLiquidation(uint256,uint256,uint256)"(
      _index: BigNumberish,
      _bid: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    bidOnYTLiquidation(
      _index: BigNumberish,
      _bidYield: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "bidOnYTLiquidation(uint256,uint256,uint256)"(
      _index: BigNumberish,
      _bidYield: BigNumberish,
      _amtIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    claimLiquidation(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "claimLiquidation(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    claimRebate(
      _asset: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "claimRebate(address)"(
      _asset: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    claimRevenue(
      _asset: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "claimRevenue(address)"(
      _asset: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    claimYTLiquidation(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "claimYTLiquidation(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    claimYTRebate(
      _FCPaddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "claimYTRebate(address)"(
      _FCPaddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    claimYTRevenue(
      _FCP: string,
      _bondIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "claimYTRevenue(address,int256)"(
      _FCP: string,
      _bondIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    closeVault(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "closeVault(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    closeYTVault(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "closeYTVault(uint256,address)"(
      _index: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    instantLiquidation(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "instantLiquidation(address,uint256,address,address,uint256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    instantYTLiquidation(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "instantYTLiquidation(address,uint256,address,address,uint256,uint256,int256,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _maxIn: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    liquidationRebates(
      _owner: string,
      _asset: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "liquidationRebates(address,address)"(
      _owner: string,
      _asset: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    liquidationsLength(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "liquidationsLength()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    openVault(
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "openVault(address,address,uint256,uint256,uint256,int128,int128)"(
      _assetSupplied: string,
      _assetBorrowed: string,
      _amountSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    openYTVault(
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "openYTVault(address,address,uint256,int256,uint256,uint256,int128,int128)"(
      _FCPsupplied: string,
      _FCPborrowed: string,
      _yieldSupplied: BigNumberish,
      _bondSupplied: BigNumberish,
      _amountBorrowed: BigNumberish,
      _priceMultiplier: BigNumberish,
      _suppliedRateChange: BigNumberish,
      _borrowRateChange: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    partialLiquidationSpecificIn(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "partialLiquidationSpecificIn(address,uint256,address,address,uint256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    partialLiquidationSpecificOut(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _out: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "partialLiquidationSpecificOut(address,uint256,address,address,uint256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _assetBorrowed: string,
      _assetSupplied: string,
      _out: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    partialYTLiquidationSpecificIn(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "partialYTLiquidationSpecificIn(address,uint256,address,address,uint256,uint256,int256,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _in: BigNumberish,
      _minOut: BigNumberish,
      _minBondRatio: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    partialYTLiquidationSpecificOut(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _out: BigNumberish,
      _minBondRatio: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "partialYTLiquidationSpecificOut(address,uint256,address,address,uint256,int256,uint256,address)"(
      _owner: string,
      _index: BigNumberish,
      _FCPborrowed: string,
      _FCPsupplied: string,
      _out: BigNumberish,
      _minBondRatio: BigNumberish,
      _maxIn: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    registerAsDistributionAccount(
      _wrapperAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "registerAsDistributionAccount(address)"(
      _wrapperAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    revenue(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "revenue(address)"(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setLiquidationRebate(
      _rebateBips: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setLiquidationRebate(uint256)"(
      _rebateBips: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    shortInterestAllDurations(
      _wrapper: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "shortInterestAllDurations(address)"(
      _wrapper: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferVault(
      _index: BigNumberish,
      _to: string,
      _isYTVault: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferVault(uint256,address,bool)"(
      _index: BigNumberish,
      _to: string,
      _isYTVault: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    vaults(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "vaults(address,uint256)"(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    vaultsLength(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "vaultsLength(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
