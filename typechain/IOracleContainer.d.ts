/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IOracleContainerInterface extends ethers.utils.Interface {
  functions: {
    "AssetPhrase(address)": FunctionFragment;
    "BaseAggregatorAddress(string)": FunctionFragment;
    "getAssetPrice(address)": FunctionFragment;
    "phraseToLatestPrice(string)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "AssetPhrase", values: [string]): string;
  encodeFunctionData(
    functionFragment: "BaseAggregatorAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getAssetPrice",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "phraseToLatestPrice",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "AssetPhrase",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BaseAggregatorAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAssetPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "phraseToLatestPrice",
    data: BytesLike
  ): Result;

  events: {};
}

export class IOracleContainer extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IOracleContainerInterface;

  functions: {
    AssetPhrase(
      _aTokenAddress: string,
      overrides?: CallOverrides
    ): Promise<{
      phrase: string;
      0: string;
    }>;

    "AssetPhrase(address)"(
      _aTokenAddress: string,
      overrides?: CallOverrides
    ): Promise<{
      phrase: string;
      0: string;
    }>;

    BaseAggregatorAddress(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "BaseAggregatorAddress(string)"(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getAssetPrice(
      _assetAddress: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getAssetPrice(address)"(
      _assetAddress: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    phraseToLatestPrice(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<{
      spot: BigNumber;
      decimals: number;
      0: BigNumber;
      1: number;
    }>;

    "phraseToLatestPrice(string)"(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<{
      spot: BigNumber;
      decimals: number;
      0: BigNumber;
      1: number;
    }>;
  };

  AssetPhrase(
    _aTokenAddress: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "AssetPhrase(address)"(
    _aTokenAddress: string,
    overrides?: CallOverrides
  ): Promise<string>;

  BaseAggregatorAddress(
    _phrase: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "BaseAggregatorAddress(string)"(
    _phrase: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getAssetPrice(
    _assetAddress: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAssetPrice(address)"(
    _assetAddress: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  phraseToLatestPrice(
    _phrase: string,
    overrides?: CallOverrides
  ): Promise<{
    spot: BigNumber;
    decimals: number;
    0: BigNumber;
    1: number;
  }>;

  "phraseToLatestPrice(string)"(
    _phrase: string,
    overrides?: CallOverrides
  ): Promise<{
    spot: BigNumber;
    decimals: number;
    0: BigNumber;
    1: number;
  }>;

  callStatic: {
    AssetPhrase(
      _aTokenAddress: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "AssetPhrase(address)"(
      _aTokenAddress: string,
      overrides?: CallOverrides
    ): Promise<string>;

    BaseAggregatorAddress(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "BaseAggregatorAddress(string)"(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getAssetPrice(
      _assetAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAssetPrice(address)"(
      _assetAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    phraseToLatestPrice(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<{
      spot: BigNumber;
      decimals: number;
      0: BigNumber;
      1: number;
    }>;

    "phraseToLatestPrice(string)"(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<{
      spot: BigNumber;
      decimals: number;
      0: BigNumber;
      1: number;
    }>;
  };

  filters: {};

  estimateGas: {
    AssetPhrase(
      _aTokenAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "AssetPhrase(address)"(
      _aTokenAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    BaseAggregatorAddress(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "BaseAggregatorAddress(string)"(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAssetPrice(
      _assetAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAssetPrice(address)"(
      _assetAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    phraseToLatestPrice(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "phraseToLatestPrice(string)"(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    AssetPhrase(
      _aTokenAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "AssetPhrase(address)"(
      _aTokenAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    BaseAggregatorAddress(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "BaseAggregatorAddress(string)"(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAssetPrice(
      _assetAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAssetPrice(address)"(
      _assetAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    phraseToLatestPrice(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "phraseToLatestPrice(string)"(
      _phrase: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
