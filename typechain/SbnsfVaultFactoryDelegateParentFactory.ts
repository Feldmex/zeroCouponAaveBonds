/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SbnsfVaultFactoryDelegateParent } from "./SbnsfVaultFactoryDelegateParent";

export class SbnsfVaultFactoryDelegateParentFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SbnsfVaultFactoryDelegateParent> {
    return super.deploy(
      overrides || {}
    ) as Promise<SbnsfVaultFactoryDelegateParent>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SbnsfVaultFactoryDelegateParent {
    return super.attach(address) as SbnsfVaultFactoryDelegateParent;
  }
  connect(signer: Signer): SbnsfVaultFactoryDelegateParentFactory {
    return super.connect(signer) as SbnsfVaultFactoryDelegateParentFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SbnsfVaultFactoryDelegateParent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SbnsfVaultFactoryDelegateParent;
  }
}

const _abi = [
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102f9806100606000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b610043610075565b604051610050919061022e565b60405180910390f35b610073600480360381019061006e91906101b6565b61009a565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610129576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012090610249565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461019e57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000813590506101b0816102ac565b92915050565b6000602082840312156101c857600080fd5b60006101d6848285016101a1565b91505092915050565b6101e88161027a565b82525050565b60006101fb600a83610269565b91507f6f6e6c79206f776e6572000000000000000000000000000000000000000000006000830152602082019050919050565b600060208201905061024360008301846101df565b92915050565b60006020820190508181036000830152610262816101ee565b9050919050565b600082825260208201905092915050565b60006102858261028c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6102b58161027a565b81146102c057600080fd5b5056fea2646970667358221220a2a231448e932774e0631f9b4b7993de3efbc0c5bd7ca8b59a896f3a4a63f2bf64736f6c63430006080033";
