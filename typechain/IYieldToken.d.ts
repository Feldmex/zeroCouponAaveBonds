/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IYieldTokenInterface extends ethers.utils.Interface {
  functions: {
    "FixCapitalPoolAddress()": FunctionFragment;
    "WrapperAddress()": FunctionFragment;
    "allowance(address,address)": FunctionFragment;
    "approve(address,uint256)": FunctionFragment;
    "approve_2(address,uint256,bool)": FunctionFragment;
    "balanceOf(address)": FunctionFragment;
    "balanceOf_2(address,bool)": FunctionFragment;
    "decimals()": FunctionFragment;
    "decrementAllowance(address,address,uint256)": FunctionFragment;
    "lastUpdate()": FunctionFragment;
    "maturity()": FunctionFragment;
    "name()": FunctionFragment;
    "setAllowance(address,address,uint256)": FunctionFragment;
    "symbol()": FunctionFragment;
    "totalSupply()": FunctionFragment;
    "transfer(address,uint256)": FunctionFragment;
    "transferFrom(address,address,uint256)": FunctionFragment;
    "transferFrom_2(address,address,uint256,bool)": FunctionFragment;
    "transfer_2(address,uint256,bool)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "FixCapitalPoolAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WrapperAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "allowance",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "approve_2",
    values: [string, BigNumberish, boolean]
  ): string;
  encodeFunctionData(functionFragment: "balanceOf", values: [string]): string;
  encodeFunctionData(
    functionFragment: "balanceOf_2",
    values: [string, boolean]
  ): string;
  encodeFunctionData(functionFragment: "decimals", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "decrementAllowance",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "lastUpdate",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "maturity", values?: undefined): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setAllowance",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "symbol", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "totalSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transfer",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom_2",
    values: [string, string, BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer_2",
    values: [string, BigNumberish, boolean]
  ): string;

  decodeFunctionResult(
    functionFragment: "FixCapitalPoolAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "WrapperAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "allowance", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "approve_2", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf_2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "decimals", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "decrementAllowance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "lastUpdate", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "maturity", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setAllowance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "transfer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom_2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "transfer_2", data: BytesLike): Result;

  events: {
    "Approval(address,address,uint256)": EventFragment;
    "Transfer(address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Approval"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Transfer"): EventFragment;
}

export class IYieldToken extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IYieldTokenInterface;

  functions: {
    FixCapitalPoolAddress(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "FixCapitalPoolAddress()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    WrapperAddress(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "WrapperAddress()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<{
      remaining: BigNumber;
      0: BigNumber;
    }>;

    "allowance(address,address)"(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<{
      remaining: BigNumber;
      0: BigNumber;
    }>;

    approve(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "approve(address,uint256)"(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    approve_2(
      _spender: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "approve_2(address,uint256,bool)"(
      _spender: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    balanceOf(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      balance: BigNumber;
      0: BigNumber;
    }>;

    "balanceOf(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      balance: BigNumber;
      0: BigNumber;
    }>;

    balanceOf_2(
      _owner: string,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "balanceOf_2(address,bool)"(
      _owner: string,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    decimals(overrides?: CallOverrides): Promise<{
      digits: number;
      0: number;
    }>;

    "decimals()"(overrides?: CallOverrides): Promise<{
      digits: number;
      0: number;
    }>;

    decrementAllowance(
      _owner: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "decrementAllowance(address,address,uint256)"(
      _owner: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    lastUpdate(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "lastUpdate()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    maturity(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "maturity()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    name(overrides?: CallOverrides): Promise<{
      _name: string;
      0: string;
    }>;

    "name()"(overrides?: CallOverrides): Promise<{
      _name: string;
      0: string;
    }>;

    setAllowance(
      _owner: string,
      _spender: string,
      _allowance: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setAllowance(address,address,uint256)"(
      _owner: string,
      _spender: string,
      _allowance: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    symbol(overrides?: CallOverrides): Promise<{
      _symbol: string;
      0: string;
    }>;

    "symbol()"(overrides?: CallOverrides): Promise<{
      _symbol: string;
      0: string;
    }>;

    totalSupply(overrides?: CallOverrides): Promise<{
      supply: BigNumber;
      0: BigNumber;
    }>;

    "totalSupply()"(overrides?: CallOverrides): Promise<{
      supply: BigNumber;
      0: BigNumber;
    }>;

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transfer(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferFrom_2(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferFrom_2(address,address,uint256,bool)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transfer_2(
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transfer_2(address,uint256,bool)"(
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  FixCapitalPoolAddress(overrides?: CallOverrides): Promise<string>;

  "FixCapitalPoolAddress()"(overrides?: CallOverrides): Promise<string>;

  WrapperAddress(overrides?: CallOverrides): Promise<string>;

  "WrapperAddress()"(overrides?: CallOverrides): Promise<string>;

  allowance(
    _owner: string,
    _spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "allowance(address,address)"(
    _owner: string,
    _spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  approve(
    _spender: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "approve(address,uint256)"(
    _spender: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  approve_2(
    _spender: string,
    _value: BigNumberish,
    _roundUp: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "approve_2(address,uint256,bool)"(
    _spender: string,
    _value: BigNumberish,
    _roundUp: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  balanceOf(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  "balanceOf(address)"(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  balanceOf_2(
    _owner: string,
    _roundUp: boolean,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "balanceOf_2(address,bool)"(
    _owner: string,
    _roundUp: boolean,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  decimals(overrides?: CallOverrides): Promise<number>;

  "decimals()"(overrides?: CallOverrides): Promise<number>;

  decrementAllowance(
    _owner: string,
    _spender: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "decrementAllowance(address,address,uint256)"(
    _owner: string,
    _spender: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  lastUpdate(overrides?: CallOverrides): Promise<BigNumber>;

  "lastUpdate()"(overrides?: CallOverrides): Promise<BigNumber>;

  maturity(overrides?: CallOverrides): Promise<BigNumber>;

  "maturity()"(overrides?: CallOverrides): Promise<BigNumber>;

  name(overrides?: CallOverrides): Promise<string>;

  "name()"(overrides?: CallOverrides): Promise<string>;

  setAllowance(
    _owner: string,
    _spender: string,
    _allowance: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setAllowance(address,address,uint256)"(
    _owner: string,
    _spender: string,
    _allowance: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  symbol(overrides?: CallOverrides): Promise<string>;

  "symbol()"(overrides?: CallOverrides): Promise<string>;

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

  transfer(
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transfer(address,uint256)"(
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferFrom(
    _from: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferFrom(address,address,uint256)"(
    _from: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferFrom_2(
    _from: string,
    _to: string,
    _value: BigNumberish,
    _roundUp: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferFrom_2(address,address,uint256,bool)"(
    _from: string,
    _to: string,
    _value: BigNumberish,
    _roundUp: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transfer_2(
    _to: string,
    _value: BigNumberish,
    _roundUp: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transfer_2(address,uint256,bool)"(
    _to: string,
    _value: BigNumberish,
    _roundUp: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    FixCapitalPoolAddress(overrides?: CallOverrides): Promise<string>;

    "FixCapitalPoolAddress()"(overrides?: CallOverrides): Promise<string>;

    WrapperAddress(overrides?: CallOverrides): Promise<string>;

    "WrapperAddress()"(overrides?: CallOverrides): Promise<string>;

    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowance(address,address)"(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      _spender: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "approve(address,uint256)"(
      _spender: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    approve_2(
      _spender: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "approve_2(address,uint256,bool)"(
      _spender: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOf(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balanceOf_2(
      _owner: string,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOf_2(address,bool)"(
      _owner: string,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    decimals(overrides?: CallOverrides): Promise<number>;

    "decimals()"(overrides?: CallOverrides): Promise<number>;

    decrementAllowance(
      _owner: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "decrementAllowance(address,address,uint256)"(
      _owner: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    lastUpdate(overrides?: CallOverrides): Promise<BigNumber>;

    "lastUpdate()"(overrides?: CallOverrides): Promise<BigNumber>;

    maturity(overrides?: CallOverrides): Promise<BigNumber>;

    "maturity()"(overrides?: CallOverrides): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<string>;

    "name()"(overrides?: CallOverrides): Promise<string>;

    setAllowance(
      _owner: string,
      _spender: string,
      _allowance: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAllowance(address,address,uint256)"(
      _owner: string,
      _spender: string,
      _allowance: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    symbol(overrides?: CallOverrides): Promise<string>;

    "symbol()"(overrides?: CallOverrides): Promise<string>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "transfer(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    transferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    transferFrom_2(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferFrom_2(address,address,uint256,bool)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    transfer_2(
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "transfer_2(address,uint256,bool)"(
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    Approval(
      _owner: string | null,
      _spender: string | null,
      _value: null
    ): EventFilter;

    Transfer(
      _from: string | null,
      _to: string | null,
      _value: null
    ): EventFilter;
  };

  estimateGas: {
    FixCapitalPoolAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "FixCapitalPoolAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    WrapperAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "WrapperAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowance(address,address)"(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "approve(address,uint256)"(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    approve_2(
      _spender: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "approve_2(address,uint256,bool)"(
      _spender: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    balanceOf(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balanceOf_2(
      _owner: string,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOf_2(address,bool)"(
      _owner: string,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    decimals(overrides?: CallOverrides): Promise<BigNumber>;

    "decimals()"(overrides?: CallOverrides): Promise<BigNumber>;

    decrementAllowance(
      _owner: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "decrementAllowance(address,address,uint256)"(
      _owner: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    lastUpdate(overrides?: CallOverrides): Promise<BigNumber>;

    "lastUpdate()"(overrides?: CallOverrides): Promise<BigNumber>;

    maturity(overrides?: CallOverrides): Promise<BigNumber>;

    "maturity()"(overrides?: CallOverrides): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    "name()"(overrides?: CallOverrides): Promise<BigNumber>;

    setAllowance(
      _owner: string,
      _spender: string,
      _allowance: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setAllowance(address,address,uint256)"(
      _owner: string,
      _spender: string,
      _allowance: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;

    "symbol()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transfer(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferFrom_2(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferFrom_2(address,address,uint256,bool)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transfer_2(
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transfer_2(address,uint256,bool)"(
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    FixCapitalPoolAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "FixCapitalPoolAddress()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    WrapperAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "WrapperAddress()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "allowance(address,address)"(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    approve(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "approve(address,uint256)"(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    approve_2(
      _spender: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "approve_2(address,uint256,bool)"(
      _spender: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    balanceOf(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOf(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    balanceOf_2(
      _owner: string,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOf_2(address,bool)"(
      _owner: string,
      _roundUp: boolean,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "decimals()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    decrementAllowance(
      _owner: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "decrementAllowance(address,address,uint256)"(
      _owner: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    lastUpdate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "lastUpdate()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    maturity(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "maturity()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "name()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setAllowance(
      _owner: string,
      _spender: string,
      _allowance: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setAllowance(address,address,uint256)"(
      _owner: string,
      _spender: string,
      _allowance: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "symbol()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalSupply()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transfer(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferFrom_2(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferFrom_2(address,address,uint256,bool)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transfer_2(
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transfer_2(address,uint256,bool)"(
      _to: string,
      _value: BigNumberish,
      _roundUp: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
