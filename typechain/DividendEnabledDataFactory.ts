/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DividendEnabledData } from "./DividendEnabledData";

export class DividendEnabledDataFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<DividendEnabledData> {
    return super.deploy(overrides || {}) as Promise<DividendEnabledData>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DividendEnabledData {
    return super.attach(address) as DividendEnabledData;
  }
  connect(signer: Signer): DividendEnabledDataFactory {
    return super.connect(signer) as DividendEnabledDataFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DividendEnabledData {
    return new Contract(address, _abi, signerOrProvider) as DividendEnabledData;
  }
}

const _abi = [
  {
    inputs: [],
    name: "YTaddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZCBaddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activeTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contractBondDividend",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contractYieldDividend",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ineligibleBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610315806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a60d62131161005b578063a60d621314610166578063b03a416d146101b0578063b52eea74146101ce578063c13141b1146101ec5761007d565b8063258694d8146100825780634822c664146100da5780635ab8e26e14610124575b600080fd5b6100c46004803603602081101561009857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061022e565b6040518082815260200191505060405180910390f35b6100e2610246565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101506004803603602081101561013a57600080fd5b810190808035906020019092919050505061026b565b6040518082815260200191505060405180910390f35b61016e61028c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101b86102b2565b6040518082815260200191505060405180910390f35b6101d66102b8565b6040518082815260200191505060405180910390f35b6102186004803603602081101561020257600080fd5b81019080803590602001909291905050506102be565b6040518082815260200191505060405180910390f35b60076020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b818154811061027857fe5b906000526020600020016000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60045481565b600a81815481106102cb57fe5b90600052602060002001600091509050548156fea2646970667358221220440eb0cbfec440f3bbb1dad9942f0d6a60ec96fe7b1fd10a9817b34bbb84e1d664736f6c63430006080033";
