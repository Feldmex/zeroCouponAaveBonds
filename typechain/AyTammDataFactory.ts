/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AyTammData } from "./AyTammData";

export class AyTammDataFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<AyTammData> {
    return super.deploy(overrides || {}) as Promise<AyTammData>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AyTammData {
    return super.attach(address) as AyTammData;
  }
  connect(signer: Signer): AyTammDataFactory {
    return super.connect(signer) as AyTammDataFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AyTammData {
    return new Contract(address, _abi, signerOrProvider) as AyTammData;
  }
}

const _abi = [
  {
    inputs: [],
    name: "FCPaddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SlippageConstant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "YTtoLmultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZCBammAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRecalibration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maturity",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610234806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063204f83f914610067578063bb88ee3e14610099578063c0b2c27a146100b7578063c74ef4e1146100d5578063c93262aa1461011f578063f784dc241461013d575b600080fd5b61006f610187565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b6100a16101a1565b6040518082815260200191505060405180910390f35b6100bf6101a7565b6040518082815260200191505060405180910390f35b6100dd6101ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101276101d3565b6040518082815260200191505060405180910390f35b6101456101d9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600060149054906101000a900467ffffffffffffffff1681565b60085481565b60095481565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea2646970667358221220c218a3f59fac137e9000908ef9334a56e897009ccbf1499dd0b900c1672d828d64736f6c63430006080033";
