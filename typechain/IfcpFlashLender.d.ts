/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IfcpFlashLenderInterface extends ethers.utils.Interface {
  functions: {
    "flashFee(uint256,int256)": FunctionFragment;
    "flashLoan(address,uint256,int256,bytes)": FunctionFragment;
    "maxFlashLoan()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "flashFee",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "flashLoan",
    values: [string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "maxFlashLoan",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "flashFee", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "flashLoan", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "maxFlashLoan",
    data: BytesLike
  ): Result;

  events: {};
}

export class IfcpFlashLender extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IfcpFlashLenderInterface;

  functions: {
    flashFee(
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    "flashFee(uint256,int256)"(
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    flashLoan(
      receiver: string,
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "flashLoan(address,uint256,int256,bytes)"(
      receiver: string,
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    maxFlashLoan(overrides?: CallOverrides): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    "maxFlashLoan()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;
  };

  flashFee(
    amountYield: BigNumberish,
    amountBond: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
  }>;

  "flashFee(uint256,int256)"(
    amountYield: BigNumberish,
    amountBond: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
  }>;

  flashLoan(
    receiver: string,
    amountYield: BigNumberish,
    amountBond: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "flashLoan(address,uint256,int256,bytes)"(
    receiver: string,
    amountYield: BigNumberish,
    amountBond: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  maxFlashLoan(overrides?: CallOverrides): Promise<{
    0: BigNumber;
    1: BigNumber;
  }>;

  "maxFlashLoan()"(overrides?: CallOverrides): Promise<{
    0: BigNumber;
    1: BigNumber;
  }>;

  callStatic: {
    flashFee(
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    "flashFee(uint256,int256)"(
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    flashLoan(
      receiver: string,
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "flashLoan(address,uint256,int256,bytes)"(
      receiver: string,
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    maxFlashLoan(overrides?: CallOverrides): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    "maxFlashLoan()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;
  };

  filters: {};

  estimateGas: {
    flashFee(
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "flashFee(uint256,int256)"(
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    flashLoan(
      receiver: string,
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "flashLoan(address,uint256,int256,bytes)"(
      receiver: string,
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    maxFlashLoan(overrides?: CallOverrides): Promise<BigNumber>;

    "maxFlashLoan()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    flashFee(
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "flashFee(uint256,int256)"(
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    flashLoan(
      receiver: string,
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "flashLoan(address,uint256,int256,bytes)"(
      receiver: string,
      amountYield: BigNumberish,
      amountBond: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    maxFlashLoan(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "maxFlashLoan()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
